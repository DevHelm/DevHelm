version: '3.2'

services:
  mail:
    image: bytemark/smtp
    restart: always
    networks:
      - parthenon

  database:
    image: postgres:13.3-alpine3.14
    environment:
      - POSTGRES_DB=${PSQGL_DATABASE_NAME}
      - POSTGRES_USER=${PSQGL_DATABASE_USER}
      - POSTGRES_PASSWORD=${PSQGL_DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./docker/database/data:/var/lib/postgresql/data
      - ./docker/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - parthenon

  redis:
    image: redis:5-alpine
    networks:
      - parthenon
    ports:
      - "6379:6379"

  rediscommander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      REDIS_HOSTS: redis
      REDIS_HOST: redis
      REDIS_PORT: redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: root
      HTTP_PASSWORD: root
    ports:
      - 8081:8081
    networks:
      - parthenon

  php-fpm:
    image: billabear/ubuntu-php-fpm:8.4
    depends_on:
      - database
    environment:
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
      - DATABASE_URL=pgsql://${PSQGL_DATABASE_USER}:${PSQGL_DATABASE_PASSWORD}@database:5432/${PSQGL_DATABASE_NAME}
    volumes:
      - .:/var/www
    networks:
      - parthenon

  nginx:
    image: getparthenon/ubuntu-nginx:21.04
    volumes:
      - .:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/sites-available
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d
    depends_on:
      - php-fpm
    ports:
      - "80:80"
    networks:
      - parthenon

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  parthenon:
    driver: bridge

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
